


import java.time.LocalDate;
import java.time.format.DateTimeParseException;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author batik
 */
public class AddBook_Page extends javax.swing.JFrame {

   
    public AddBook_Page() {
        initComponents();
        setLocationRelativeTo(null);  //goal:when page closed it opens again âœ…
        this.addWindowListener(new java.awt.event.WindowAdapter() {
        @Override
        public void windowClosing(java.awt.event.WindowEvent e) {
        new GUI().setVisible(true);
    }});
    }
    
    



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        title_label = new javax.swing.JLabel();
        bookid_label = new javax.swing.JLabel();
        year_label = new javax.swing.JLabel();
        read_label = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        releaseDate_label = new javax.swing.JLabel();
        numberofpages_label = new javax.swing.JLabel();
        rating_label = new javax.swing.JLabel();
        comments_label = new javax.swing.JLabel();
        cover_label3 = new javax.swing.JLabel();
        about_label1 = new javax.swing.JLabel();
        title_textf = new javax.swing.JTextField();
        bookid_textf = new javax.swing.JTextField();
        about_tf = new javax.swing.JTextField();
        numberofpages_textf = new javax.swing.JTextField();
        releasedate_tf = new javax.swing.JTextField();
        rating_tf = new javax.swing.JTextField();
        year_tf = new javax.swing.JTextField();
        read_tf = new javax.swing.JTextField();
        cover_tf = new javax.swing.JTextField();
        comments_tf = new javax.swing.JTextField();
        authorSurname_tf = new javax.swing.JTextField();
        authorName_tf = new javax.swing.JTextField();
        title_label1 = new javax.swing.JLabel();
        bookid_label1 = new javax.swing.JLabel();
        ADDBOOK_button = new javax.swing.JButton();
        jToggleButton1 = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("ADD BOOK");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        title_label.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        title_label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        title_label.setText("TITLE :");
        title_label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        bookid_label.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        bookid_label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        bookid_label.setText("BOOK ID :");
        bookid_label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        year_label.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        year_label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        year_label.setText("YEAR :");
        year_label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        read_label.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        read_label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        read_label.setText("READ :");
        read_label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel7.setText("jLabel6");

        releaseDate_label.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        releaseDate_label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        releaseDate_label.setText("RELEASE DATE :");
        releaseDate_label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        numberofpages_label.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        numberofpages_label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        numberofpages_label.setText("NUMBER OF PAGES :");
        numberofpages_label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        rating_label.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        rating_label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        rating_label.setText("RATING :");
        rating_label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        comments_label.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        comments_label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        comments_label.setText("COMMENTS :");
        comments_label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        cover_label3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        cover_label3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        cover_label3.setText("COVER : ");
        cover_label3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        about_label1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        about_label1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        about_label1.setText("ABOUT :");
        about_label1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        title_textf.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        title_textf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                title_textfActionPerformed(evt);
            }
        });

        bookid_textf.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        bookid_textf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookid_textfActionPerformed(evt);
            }
        });

        about_tf.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        about_tf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                about_tfActionPerformed(evt);
            }
        });

        numberofpages_textf.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        numberofpages_textf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numberofpages_textfActionPerformed(evt);
            }
        });

        releasedate_tf.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        releasedate_tf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                releasedate_tfActionPerformed(evt);
            }
        });

        rating_tf.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        rating_tf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rating_tfActionPerformed(evt);
            }
        });

        year_tf.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        year_tf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                year_tfActionPerformed(evt);
            }
        });

        read_tf.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        read_tf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                read_tfActionPerformed(evt);
            }
        });

        cover_tf.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        cover_tf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cover_tfActionPerformed(evt);
            }
        });

        comments_tf.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        comments_tf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comments_tfActionPerformed(evt);
            }
        });

        authorSurname_tf.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        authorSurname_tf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                authorSurname_tfActionPerformed(evt);
            }
        });

        authorName_tf.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        authorName_tf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                authorName_tfActionPerformed(evt);
            }
        });

        title_label1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        title_label1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        title_label1.setText("AUTHOR SURNAME :");
        title_label1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        bookid_label1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        bookid_label1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        bookid_label1.setText("AUTHOR NAME :");
        bookid_label1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        ADDBOOK_button.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        ADDBOOK_button.setText("ADD BOOK");
        ADDBOOK_button.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        ADDBOOK_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ADDBOOK_buttonActionPerformed(evt);
            }
        });

        jToggleButton1.setText("BACK TO MAIN MENU");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(releaseDate_label, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE)
                            .addComponent(rating_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(about_label1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(numberofpages_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bookid_label1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bookid_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(authorName_tf)
                            .addComponent(about_tf, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bookid_textf, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(numberofpages_textf, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rating_tf, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(releasedate_tf, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(title_label1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(title_label, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cover_label3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(year_label, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(comments_label, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(read_label, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(year_tf)
                            .addComponent(read_tf)
                            .addComponent(cover_tf)
                            .addComponent(comments_tf)
                            .addComponent(title_textf)
                            .addComponent(authorSurname_tf, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(47, 47, 47))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jToggleButton1)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(ADDBOOK_button, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(272, 272, 272))))
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bookid_label, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bookid_textf, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(title_label, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(title_textf, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bookid_label1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(authorName_tf, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(title_label1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(authorSurname_tf, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(year_label, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(cover_label3, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(read_label, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(comments_label, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(1, 1, 1)
                            .addComponent(year_tf, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(cover_tf, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(read_tf, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(comments_tf, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(numberofpages_label, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(numberofpages_textf, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(about_tf, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(about_label1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rating_label, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rating_tf, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(releaseDate_label, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(releasedate_tf, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(ADDBOOK_button, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void title_textfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_title_textfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_title_textfActionPerformed

    private void bookid_textfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookid_textfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bookid_textfActionPerformed

    private void about_tfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_about_tfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_about_tfActionPerformed

    private void numberofpages_textfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numberofpages_textfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numberofpages_textfActionPerformed

    private void releasedate_tfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_releasedate_tfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_releasedate_tfActionPerformed

    private void rating_tfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rating_tfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rating_tfActionPerformed

    private void year_tfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_year_tfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_year_tfActionPerformed

    private void read_tfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_read_tfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_read_tfActionPerformed

    private void cover_tfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cover_tfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cover_tfActionPerformed

    private void comments_tfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comments_tfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comments_tfActionPerformed

    private void authorSurname_tfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_authorSurname_tfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_authorSurname_tfActionPerformed

    private void authorName_tfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_authorName_tfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_authorName_tfActionPerformed

    private void ADDBOOK_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ADDBOOK_buttonActionPerformed
                                              
        String bookIdStr = bookid_textf.getText().trim();
        

    if (bookIdStr.isEmpty()) { //goal: bookID is the primary key of book. without it book can not be live âœ…
    JOptionPane.showMessageDialog(this, "Book ID cannot be empty.");
    return;
        }

    int bookId;
    try {
    bookId = Integer.parseInt(bookIdStr);
    } catch (NumberFormatException e) {
    JOptionPane.showMessageDialog(this, "Book ID must be a number.");
    return;
    }

        
    try {
       
        String title = title_textf.getText().trim();
        String authorName = authorName_tf.getText().trim();
        String authorSurname = authorSurname_tf.getText().trim();
        String yearStr = year_tf.getText().trim();
        String pagesStr = numberofpages_textf.getText().trim();
        String cover = cover_tf.getText().trim();
        String about = about_tf.getText().trim();
        String readStr = read_tf.getText().trim();
        String ratingStr = rating_tf.getText().trim();
        String comments = comments_tf.getText().trim();
        String releaseDate = releasedate_tf.getText().trim();
        
        if (bookIdStr.isEmpty()) {  // goal : taken values must be valid âœ…
        JOptionPane.showMessageDialog(this, "Book ID cannot be empty.");
     return;
    }
    
    try {
    bookId = Integer.parseInt(bookIdStr);
    } catch (NumberFormatException e) {
    JOptionPane.showMessageDialog(this, "Book ID must be a number.");
    return;
    }


        if (!validateInputs(title, authorName, authorSurname, yearStr, pagesStr, cover, about, readStr, ratingStr, releaseDate)) {
            return;
        }

        int year = Integer.parseInt(yearStr);
        int pages = Integer.parseInt(pagesStr);
        int read = Integer.parseInt(readStr);
        int rating = Integer.parseInt(ratingStr);

       
        DataBase db = new DataBase();
       boolean success = db.addBook(bookId, title, authorName, authorSurname, year, pages, cover, about, read, rating, comments, releaseDate);


        
        if (success) {
            JOptionPane.showMessageDialog(this, "Book added successfully!");
            new GUI().setVisible(true);
            this.dispose();
            
            
            
        
        } else {
            JOptionPane.showMessageDialog(this, "Failed to add book.");
        }

    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
    }

    }//GEN-LAST:event_ADDBOOK_buttonActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed

        new GUI().setVisible(true);

        this.dispose();
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    
private boolean validateInputs(String title, String authorName, String authorSurname,
                               String yearStr, String pagesStr, String cover, String about,
                               String readStr, String ratingStr, String releaseDate) {

    
    if (title.isEmpty() || authorName.isEmpty() || authorSurname.isEmpty() ||
        yearStr.isEmpty() || pagesStr.isEmpty() || cover.isEmpty() || about.isEmpty() ||
        readStr.isEmpty() || ratingStr.isEmpty()) {
        JOptionPane.showMessageDialog(this, "All fields (except Comments and Release Date) must be filled.");
        return false;
    }

    try {
        Integer.parseInt(yearStr);
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Year must be a number.");
        return false;
    }

    try {
        Integer.parseInt(pagesStr);
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Number of Pages must be a number.");
        return false;
    }

    int read;
    try {
        read = Integer.parseInt(readStr);
        if (read < 1 || read > 3) {
            JOptionPane.showMessageDialog(this, "Read must be 1 (Read), 2 (Not Read), or 3 (Wish to Read).");
            return false;
        }
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Read must be a number.");
        return false;
    }

    int rating;
    try {
        rating = Integer.parseInt(ratingStr);
        if (read == 1 && (rating < 1 || rating > 5)) {
            JOptionPane.showMessageDialog(this, "Rating must be between 1 and 5 if book is read.");
            return false;
        }
        if (read != 1 && rating != 0) {
            JOptionPane.showMessageDialog(this, "Rating must be 0 if book is not read or wish to read.");
            return false;
        }
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Rating must be a number.");
        return false;
    }

    // goal : Check for release date, it cannot be past also format is important âœ…
    if (read == 3) {
        if (releaseDate.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Release date must be provided if you wish to read the book.");
            return false;
        }
        try {
            LocalDate date = LocalDate.parse(releaseDate);  
            if (date.isBefore(LocalDate.now())) {
                JOptionPane.showMessageDialog(this, "Release date must be in the future.");
                return false;
            }
        } catch (DateTimeParseException e) {
            JOptionPane.showMessageDialog(this, "Release date must be in format YYYY-MM-DD.");
            return false;
        }
    }

    return true;
}



    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddBook_Page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddBook_Page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddBook_Page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddBook_Page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddBook_Page().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ADDBOOK_button;
    private javax.swing.JLabel about_label1;
    private javax.swing.JTextField about_tf;
    private javax.swing.JTextField authorName_tf;
    private javax.swing.JTextField authorSurname_tf;
    private javax.swing.JLabel bookid_label;
    private javax.swing.JLabel bookid_label1;
    private javax.swing.JTextField bookid_textf;
    private javax.swing.JLabel comments_label;
    private javax.swing.JTextField comments_tf;
    private javax.swing.JLabel cover_label3;
    private javax.swing.JTextField cover_tf;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JLabel numberofpages_label;
    private javax.swing.JTextField numberofpages_textf;
    private javax.swing.JLabel rating_label;
    private javax.swing.JTextField rating_tf;
    private javax.swing.JLabel read_label;
    private javax.swing.JTextField read_tf;
    private javax.swing.JLabel releaseDate_label;
    private javax.swing.JTextField releasedate_tf;
    private javax.swing.JLabel title_label;
    private javax.swing.JLabel title_label1;
    private javax.swing.JTextField title_textf;
    private javax.swing.JLabel year_label;
    private javax.swing.JTextField year_tf;
    // End of variables declaration//GEN-END:variables
}
